<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="0" name="stopped"/>
<constant value="300" name="target"/>
<constant value="300" name="threshold"/>
<constant value="1" name="forward"/>
<constant value="3" name="lost"/>
<constant value="0" name="turning"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II">#Robot initializes in stopped state
var state = stopped
var turningtime = 0
var turningcheck = 0

motor.left.target = 0
motor.right.target = 0
call leds.top(32,0,0) #Red

#When forward button pressed, state forward and begin timer
onevent button.forward
  state = forward
  call leds.top(0,32,0) #Green
  timer.period[0] = 100
  turningcheck = 0

#Stop if back button pressed
onevent button.backward
  state = stopped
  motor.left.target = 0
  motor.right.target = 0

onevent prox
  #If in forward state, drive forward until line not detected
  if state == forward then
  	if prox.ground.delta[0] &lt; threshold then
     	motor.left.target = target
  	    motor.right.target = target
  	    turningtime = 0
  	    turningcheck = 0
  	else
  	  if prox.ground.delta[1] &lt; threshold then
     	  motor.left.target = target
  	    	  motor.right.target = 0
      else
          if turningcheck == 0 then
              motor.left.target = 0
  	          motor.right.target = target	
          end
      end
  	end
  	if turningcheck == 1 then
        state = lost
        motor.left.target = 0
        motor.right.target = 0
      	call sound.freq(440,10)
    end
  	if turningtime > 20 and  turningcheck == 0 then
  	    motor.left.target = -motor.left.target
      	motor.right.target = -motor.right.target
      	turningcheck = 1
    end
  end
  
onevent timer0
  turningtime++
</node>


</network>
